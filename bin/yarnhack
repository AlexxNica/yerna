#!/usr/bin/env node

// Copyright 2017 Palantir Technologies Inc.

const chalk = require('chalk');
const _ = require('lodash');
const fs = require('fs');

const { linkPackages } = require('../lib/linking');
const { getPackagesPath, getPackages } = require('../lib/packages');
const { runYarnWithPackageJsonMangling } = require('../lib/yarn-with-package-json-mangling');

if (!fs.existsSync('package.json')) {
  console.error(chalk.red('yarnhack: no package.json in the current directory, aborting...'));
} else {
  const packagesByName = getPackages(getPackagesPath());

  const child = runYarnWithPackageJsonMangling(process.argv.slice(2), {
    cwd: process.cwd(),
    env: process.env,
    stdio: 'inherit'
  }, packagesByName);

  child.on('exit', (code, signal) => {
    linkPackages(packagesByName);
    console.error(`yarnhack: re-linked ${chalk.cyan(_.size(packagesByName))} local packages`);
    process.exitCode = code;
  });

  process.on('SIGINT', () => {
    console.error(chalk.red('yarnhack: received sigint, terminating...'));
    child.kill();
  });
}
